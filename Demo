import customtkinter as ctk
from tkinter import ttk
import datetime

def create_gui():
    ctk.set_appearance_mode("System")
    ctk.set_default_color_theme("blue")

    root = ctk.CTk()
    root.title("Inventory Manager")
    root.geometry("1000x600")  # Adjust as needed

    # --- Grid Layout Configuration ---
    root.grid_rowconfigure(0, weight=1)
    root.grid_columnconfigure(0, weight=10)  # Treeview (very wide)
    root.grid_columnconfigure(1, weight=1)  # Right frame

    # --- Middle Frame (Treeview Table) ---
    middle_frame = ctk.CTkFrame(root, corner_radius=0)
    middle_frame.grid(row=0, column=0, sticky="nswe", padx=10, pady=10)

    style = ttk.Style()
    style.configure("Treeview", font=("Arial", 12), padding=(0,0)) # Set cell font size to 20
    style.configure("Treeview.Heading", font=("Arial", 13, "bold"), bg ="black") # Set heading font size to 20

    tree = ttk.Treeview(middle_frame, columns=("Name", "Date", "Quantity", "Type", "ID"), show="headings")
    tree.heading("Name", text="Item Name", )
    tree.heading("Date", text="Date Added")
    tree.heading("Quantity", text="Quantity")
    tree.heading("Type", text="Type")
    tree.heading("ID", text="ID")
    tree.pack(fill=ctk.BOTH, expand=True)

    tree.column("Name", width=180)
    tree.column("Date", width=100)
    tree.column("Quantity", width=100)
    tree.column("Type", width=100)
    tree.column("ID", width=100)

    # Add Example Data
    today = datetime.date.today()
    tree.insert("", ctk.END, values=("Laptop", today.strftime("%Y-%m-%d"), "50", "Electronics", "1001"))
    tree.insert("", ctk.END, values=("T-Shirt", today.strftime("%Y-%m-%d"), "200", "Clothing", "1002"))
    tree.insert("", ctk.END, values=("Bananas", today.strftime("%Y-%m-%d"), "1000000", "Food", "1003"))
    tree.insert("", ctk.END, values=("Desk Chair", today.strftime("%Y-%m-%d"), "25", "Furniture", "1004"))
    tree.insert("", ctk.END, values=("Notebook", today.strftime("%Y-%m-%d"), "500", "Stationery", "1005"))

    # --- Right Frame (Search and Input) ---
    right_frame = ctk.CTkFrame(root, corner_radius=0)
    right_frame.grid(row=0, column=1, sticky="nswe", padx=10, pady=10)

    # --- Input Section ---
    input_section = ctk.CTkFrame(right_frame, corner_radius=0)
    input_section.pack(fill="x", pady=5)

    labels = ["Name", "Type", "Quantity"]
    entries = []
    for label_text in labels:
        label = ctk.CTkLabel(input_section, text=label_text, anchor="w")
        label.pack(fill="x")
        entry = ctk.CTkEntry(input_section)
        entry.pack(fill="x")
        entries.append(entry)

    input_button_frame = ctk.CTkFrame(input_section, corner_radius=0)
    input_button_frame.pack(fill="x", pady=5)
    input_add = ctk.CTkButton(input_button_frame, text="Add")
    input_add.pack(side="left", padx=5)
    input_cancel = ctk.CTkButton(input_button_frame, text="Cancel")
    input_cancel.pack(side="left")

    # --- Search Section ---
    search_section = ctk.CTkFrame(right_frame, corner_radius=0)
    search_section.pack(fill="x", pady=5)

    search_label = ctk.CTkLabel(search_section, text="Search")
    search_label.pack(fill="x")
    search_entry = ctk.CTkEntry(search_section)
    search_entry.pack(fill="x")

    search_button_frame = ctk.CTkFrame(search_section, corner_radius=0)
    search_button_frame.pack(fill="x", pady=5)
    search_confirm = ctk.CTkButton(search_button_frame, text="Confirm")
    search_confirm.pack(side="left", padx=5)
    search_cancel = ctk.CTkButton(search_button_frame, text="Cancel")
    search_cancel.pack(side="left")

    # --- Delete/Refresh Section ---
    delete_refresh_section = ctk.CTkFrame(right_frame, corner_radius=0)
    delete_refresh_section.pack(fill="x", pady=5)

    delete_button = ctk.CTkButton(delete_refresh_section, text="Delete")
    delete_button.pack(side="left", padx=5)
    refresh_button = ctk.CTkButton(delete_refresh_section, text="Refresh")
    refresh_button.pack(side="left")

    root.mainloop()

if __name__ == "__main__":
    create_gui()